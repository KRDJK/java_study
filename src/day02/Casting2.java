package day02;

public class Casting2 {
    public static void main(String[] args) {
    
    // downcasting : 하위 타입 변환
    // 다운 캐스팅시 값의 손실이 일어날 수 있음. 매번 일어나는 것은 아니고 일어날 가능성이 있다!!

        // 0011 1110 1000 이게 1000을 2진수로 바꾼 결과!
        // 0011 부분이 byte로 바뀌면서 소실됨!! 그럼 1110 1000을 가져오는데
        // 맨 앞 부분이 부호 표시임. 0이면 양수, 1이면 음수.
    int n = 1000; // 만약 1000이 아니라 100이었다면 값 손실이 없었을것!!
    byte m = (byte) n; // n은 int라는 넓은 곳에서 좁은 곳을 가려는 행위인거임. 내가 직접 버릴 것들을 버려줘야함.

    System.out.println("m = " + m); // 왜 결과가 -24???

    double k = 5.556;
    int j = (int) k; // 실수가 무조건 정수보다 크기 때문에 이것도 큰 곳에서 작은 곳으로 이사하려는 것임. 이러면 알아서 변환하지 않고 내가 처리해주길 기다림.
    System.out.println("j = " + j); // 소수점 이하가 날아감! 이럴 땐 일부러 명시적 형변환을 사용하기도 한다.
    // 여기서 (int), (byte)이런 명시적 형변환을 위해 써줄 때! 얘네를 형변환 연산자라고 지칭함.(단항 연산자!)

    }

}
